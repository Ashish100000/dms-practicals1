#include<iostream>
#include<vector>
using namespace std;

bool isCompleteGraph(const vector<vector<int>>& adjList) {
    int numVertices = adjList.size();
    for (int i = 0; i < numVertices; ++i) {
        for (int j = 0; j < numVertices; ++j) {
            if (i == j) {
                continue;
            }
            bool connected = false;
            for (int k = 0; k < adjList[i].size(); ++k) {
                if (adjList[i][k] == j) {
                    connected = true;
                    break;
                }
            }
            if (!connected) {
                return false;
            }
        }
    }
    return true;
}

int main() {
    vector<vector<int>> graph1 = {
        {1, 2, 3},
        {0, 2, 3},
        {0, 1, 3},
        {0, 1, 2}
    };

    vector<vector<int>> graph2 = {
        {1, 2, 3},
        {0,    2},
        {0, 1, 3},
        {0,    1}
    };

    cout << boolalpha;
    cout << isCompleteGraph(graph1) << endl;
    cout << isCompleteGraph(graph2) << endl;

    return 0;
}
